<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <artifactId>mocca</artifactId>
    <groupId>at.gv.egiz</groupId>
    <version>1.3.19</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <artifactId>BKUOnline</artifactId>
  <packaging>war</packaging>
  <name>MOCCA Online</name>

  <dependencies>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>at.gv.egiz</groupId>
      <artifactId>bkucommon</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
    <dependency>
      <groupId>at.gv.egiz</groupId>
      <artifactId>BKUViewer</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
    <dependency>
      <groupId>at.gv.egiz</groupId>
      <artifactId>STALService</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
    <dependency>
      <groupId>at.gv.egiz</groupId>
      <artifactId>STALXService</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
    <dependency>
      <artifactId>BKUCertificates</artifactId>
      <groupId>at.gv.egiz</groupId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <artifactId>BKUHelp</artifactId>
      <groupId>at.gv.egiz</groupId>
      <version>${project.parent.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>iaik</groupId>
      <artifactId>iaik_xsect_signed</artifactId>
    </dependency>
    <dependency>
      <groupId>iaik</groupId>
      <artifactId>iaik_jce_full_signed</artifactId>
    </dependency>
    <dependency>
      <groupId>iaik</groupId>
      <artifactId>iaik_ecc_signed</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aop</artifactId>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>commons-configuration</groupId>
      <artifactId>commons-configuration</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <!--
         | see https://wsit.dev.java.net/issues/show_bug.cgi?id=970
    -->
    <dependency>
      <groupId>com.sun.xml.ws</groupId>
      <artifactId>jaxws-rt</artifactId>
            <!-- use JAX-WS RI with SJSXP instead of Woodstox -->
      <exclusions>
        <exclusion>
          <groupId>woodstox</groupId>
          <artifactId>wstx-asl</artifactId>
        </exclusion>
      </exclusions>
      <!--
        conflict with SAAJ from java 6 ? <exclusions> <exclusion>
        <groupId>javax.xml.soap</groupId> <artifactId>saaj-api</artifactId>
        </exclusion> <exclusion>
        <groupId>com.sun.xml.messaging.saaj</groupId>
        <artifactId>saaj-impl</artifactId> </exclusion> </exclusions -->
    </dependency>
    <dependency>
      <artifactId>sjsxp</artifactId>
      <groupId>com.sun.xml.stream</groupId>
      <version>1.0.2</version>
    </dependency>
        <!--
         |   Applet-only dependencies (put in provided scope)
         |   list to make them known to maven-dependency plugin
         |   and make sure BKUApplet(Ext) is built prior to BKUOnline
         |-->
    <dependency>
      <groupId>at.gv.egiz</groupId>
      <artifactId>BKUApplet</artifactId>
      <version>${project.parent.version}</version>
      <classifier>single</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>at.gv.egiz</groupId>
      <artifactId>BKUAppletExt</artifactId>
      <version>${project.parent.version}</version>
      <classifier>single</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
      <version>1.2</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>
  </dependencies>
  <description>MOCCA Online</description>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <groupId>org.apache.maven.plugins</groupId>
        <executions>
          <execution>
            <id>copy-applet</id>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/${project.build.finalName}/applet</outputDirectory>
              <includeGroupIds>at.gv.egiz</includeGroupIds>
              <includeArtifactIds>BKUApplet,BKUAppletExt</includeArtifactIds>
              <excludeTransitive>true</excludeTransitive>
              <stripVersion>true</stripVersion>
            </configuration>
          </execution>
          <execution>
            <id>unpack-fonts</id>
            <!--phase>package</phase-->
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/${project.build.finalName}/applet</outputDirectory>
              <includeGroupIds>at.gv.egiz</includeGroupIds>
              <includeArtifactIds>BKUFonts</includeArtifactIds>
              <excludes>META-INF/,LICENSE</excludes>
              <!--excludeTransitive>false</excludeTransitive-->
            </configuration>
          </execution>
          <execution>
            <id>copy-certificates</id>
            <goals>
              <!-- unpack does not work with release:prepare -->
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <includeArtifactIds>BKUCertificates</includeArtifactIds>
              <includeGroupIds>at.gv.egiz</includeGroupIds>
              <excludes>META-INF/</excludes>
              <outputDirectory>${project.build.directory}/${project.build.finalName}/WEB-INF/classes</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>copy-help</id>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <includeArtifactIds>BKUHelp</includeArtifactIds>
              <includeGroupIds>at.gv.egiz</includeGroupIds>
              <excludes>META-INF/</excludes>
              <outputDirectory>${project.build.directory}/${project.build.finalName}</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <manifest>
            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
          </manifest>
          <archive>
            <manifestEntries>
              <Implementation-Build>${project.version}-r${buildNumber}</Implementation-Build>
            </manifestEntries>
          </archive>
          <warSourceExcludes>applet/**</warSourceExcludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>create</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <doCheck>false</doCheck>
          <doUpdate>false</doUpdate>
          <revisionOnScmFailure>SvnRevMissing</revisionOnScmFailure>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>jaxb-generate-stal</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>jaxws-maven-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>wsimport</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <verbose>true</verbose>
              <bindingDirectory>${basedir}/src/main/custom-binding</bindingDirectory>
              <bindingFiles>
                <bindingFile>stalservice-custom.xml</bindingFile>
                <bindingFile>staltypes-custom.xml</bindingFile>
                <bindingFile>cardchannel-custom.xml</bindingFile>
              </bindingFiles>
              <!-- wsdlDirectory>${basedir}/src/main/webapp/WEB-INF/wsdl</wsdlDirectory-->
              <wsdlDirectory>${basedir}/src/main/wsdl</wsdlDirectory>
              <wsdlFiles>
                <wsdlFile>stal-service.wsdl</wsdlFile>
              </wsdlFiles>
              <sourceDestDir>${project.build.directory}/generated-sources/wsimport</sourceDestDir>
              <staleFile>${project.build.directory}/generated-sources/wsimport/.staleFlag</staleFile>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>include-webstart</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <groupId>org.apache.maven.plugins</groupId>
            <executions>
              <execution>
                <id>copy-webstart</id>
                <goals>
                  <goal>unpack-dependencies</goal>
                </goals>
                <configuration>
                  <includeGroupIds>at.gv.egiz</includeGroupIds>
                  <includeArtifactIds>BKUWebStart</includeArtifactIds>
                  <outputDirectory>${project.build.directory}/${project.build.finalName}/webstart</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <dependencies>
        <!-- not yet available in IBIBLIO, install locally
         |   NOT REQUIRED FOR BASIC DOWNLOAD PROTOCOL
         |
        <dependency>
          <groupId>org.codehaus.mojo.webstart</groupId>
          <artifactId>webstart-jnlp-servlet</artifactId>
          <version>1.0-6.0.02_ea_b02.1-SNAPSHOT</version>
        </dependency-->
        <!-- dependency to ensure BKUWebStart is build prior to BKUOnline;
         |   transitive dependencies shall not be included in WEB-INF/lib
         |   and are provided in the BKUWebStart zip
         |   (version defined in super-pom dependencyManagement, version won't be adjusted by release:prepare) -->
        <dependency>
          <groupId>at.gv.egiz</groupId>
          <artifactId>BKUWebStart</artifactId>
          <type>zip</type>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <!--
      This profile is here for triggering when another scm than svn is
      used (for example git). Get the git commit hash.
      -->
      <id>buildnumber-git</id>
      <activation>
        <file>
          <missing>.svn</missing>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.groovy.maven</groupId>
            <artifactId>gmaven-plugin</artifactId>
            <version>1.0</version>
            <executions>
              <execution>
                <phase>generate-resources</phase>
                <goals>
                  <goal>execute</goal>
                </goals>
                <configuration>
                  <source>
                    def shell = "sh"
                    def param = "-c"
                    if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")) {
                      shell = "cmd"
                      param = "/c"
                    }
                    def gitSvnProc = [shell, param, "git rev-parse --short HEAD"].execute()
                    gitSvnProc.waitFor()
                    def svnref = gitSvnProc.in.text.trim()
                    project.properties['gitSvnRev'] = svnref
                  </source>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>buildnumber-maven-plugin</artifactId>
            <executions>
              <execution>
                <phase>generate-resources</phase>
                <goals>
                  <goal>create</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <doCheck>false</doCheck>
              <doUpdate>false</doUpdate>
              <format>{0}</format>
              <items>
                <item>${gitSvnRev}</item>
              </items>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <properties>
    <netbeans.hint.deploy.server>Tomcat60</netbeans.hint.deploy.server>
  </properties>
</project>
